
//   Statuses
// New:          		'.status-1';
// In progress:  		'.status-2';
// Resolved:     		'.status-3';
// Feedback:     		'.status-4';
// Closed:       		'.status-5';
// Rejected:     		'.status-6';


//   Priorities
// Low:          '.priority-1';
// Normal:       '.priority-2';
// High:         '.priority-3';
// Urgent:       '.priority-4';
// Immediate:    '.priority-5';


//   Trackers
// 'Blad':               '.tracker-1';
// 'Zadanie':            '.tracker-2';
// 'Etap':               '.tracker-5';
// 'Grupa zagadnieÅ„':    '.tracker-7';


// -----------------------------------------------------------
//   Default
div {
     &.issue {
          background: rgb(255, 255, 245);
     }
}


#header  {
     & > h1 {
          background: none;
     }
}


// -----------------------------------------------------------

//Colors map
$colors: (
     red: #f6b5b5,
     green: #caeda8,
     blue: #cbd6fd,

     gray: #d6d6d6,
     white: #fafafa,

     yellow: #fffeb7,
     orange: #ffd4a2,
	 
     purple: #e3b8ff,

     black: rgb(77, 177, 77)
);


@mixin blinker {
     animation-name: blinker;
     animation-duration: 0.6s;
     animation-iteration-count: infinite;
     animation-direction: alternate;
}


@mixin statusColor($status, $color, $blinkerInclude: false) {

     $gotColor: map-get($colors, $color);

     tr.time-entry {
          td.subject {
               //Statuses at 
               a.status-#{$status} {
                    background: linear-gradient(to top, $gotColor 0%, darken($gotColor, 10) 100%);
                    @if ($blinkerInclude == true) {
                         @include blinker;
                    }
               }
          }
     }


     tr.status-#{$status} {
          td {
               &.status {

                    $strokeColor: rgb(75, 75, 75);
                    
                    // text-decoration: underline overline $gotColor;
                    font-size: 0.7rem;
                    font-family: sans-serif;
                    font-weight: 700;

                    color: $gotColor;
                    text-shadow: -1px -1px 0 $strokeColor, 1px -1px 0 $strokeColor, -1px 1px 0 $strokeColor, 1px 1px 0 $strokeColor;

                    //-webkit-text-stroke: 1px $strokeColor;

                    @if ($blinkerInclude == true) {
                         @include blinker;
                    }
               }


               &:last-child:before {
                    background: linear-gradient(to left, $gotColor 0%, darken($gotColor, 10) 100%);

                    @if ($blinkerInclude == true) {
                         @include blinker;
                    }

               }
          }
     }
}


.autoscroll {
     overflow: visible;
}


table.list.time-entries, table.list.issues {

     tbody {
          tr {

               td:last-child {

                    position: relative;

                    &:before {
                         position: absolute;
                         display: block;
                         content: '';

                         right: -10px;
                         top: 0;
                         
                         width: 10px;
                         height: 100%;
                         
                         border-top-right-radius: 50%;
                         border-bottom-right-radius: 50%;
                         
                         background: none;
                    }

               }
               
          }
          
       
          tr.time-entry {

               td.subject {

                    a {
                         background: white;
                         color: rgb(27, 27, 27);

                         border: 1px solid #838383;
                         border-radius: 5px;
                         height: 100%;
                         padding: 0 15px;
                         display: inline-block;
                    }

               }
          }

          
          // Right panel colour status lights & status underlines
          // Other statuses colors
          @include statusColor(1, red);
          @include statusColor(2, blue);
          @include statusColor(3, green);
          @include statusColor(4, orange);
          @include statusColor(5, gray);
          @include statusColor(6, gray);
  
     
     }

}


@mixin priority($priority, $color) {
     tr.#{$priority} {
     
          &.odd { 
               background: lighten(rgba(map-get($colors,  $color), 0.6), 3); 
          }
     
          &.even { 
               background: rgba(map-get($colors, $color), 0.6);
          }
     }
}


@include priority(priority-1, gray);
@include priority(priority-2, white);
@include priority(priority-3, yellow);
@include priority(priority-4, orange);
@include priority(priority-5, red);


@mixin tracker($tracker, $color) {
     tr.#{$tracker} {
          td.tracker { 

               position: relative;
               color: rgb(36, 36, 36);

               &:before {
                    content: '';
                    position: absolute;
                    display: block;
                    width: 85%;
                    height: 90%;
                    top: 5%;
                    left: 50%;
                    transform: translateX(-50%);
                    background: lighten(rgba(map-get($colors,  $color), 0.5), 3); 
                    border-radius: 10px;
               }

          }
     }
}


@include tracker(tracker-1, red);
@include tracker(tracker-2, white);
@include tracker(tracker-5, orange);
@include tracker(tracker-7, purple);


@keyframes blinker {
     from {
          opacity: 1;
     }

     to {
          opacity: 0.5;
     }
}