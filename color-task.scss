
//   Statuses
// New:          '.status-1';
// In progress:  '.status-2';
// Resolved:     '.status-3';
// Feedback:     '.status-4';
// Closed:       '.status-5';
// Rejected:     '.status-6';

//   Priorities
// Low:          '.priority-1';
// Normal:       '.priority-2';
// High:         '.priority-3';
// Urgent:       '.priority-4';
// Immediate:    '.priority-5';

// -----------------------------------------------------------

//Colors map
$colors: (
     red: #f6b5b5,
     green: #caeda8,
     blue: #cbd6fd,

     gray: #d6d6d6,
     white: #fafafa,

     yellow: #fffeb7,
     orange: #ffd4a2,

     black: rgb(77, 77, 77)
);

.autoscroll {
     overflow: visible;
}


table.list.time-entries, table.list.issues {

     tbody {
          tr {

               td:last-child {

                    position: relative;

                    &:before {
                         position: absolute;
                         display: block;
                         content: '';

                         right: -10px;
                         top: 0;
                         
                         width: 10px;
                         height: 100%;
                         
                         border-top-right-radius: 50%;
                         border-bottom-right-radius: 50%;
                         
                         background: none;
                    }

               }
               
          }
          
     

          //Right panel colour status lights
          tr.status-6 td:last-child:before {
               background: linear-gradient(to left, map-get($colors, black) 0%, darken(map-get($colors, black), 10) 100%);
          }

          tr.status-5 td:last-child:before {
               background: linear-gradient(to left, map-get($colors, black) 0%, darken(map-get($colors, black), 10) 100%);
          }

          tr.status-4 td:last-child:before {
               background: linear-gradient(to left, map-get($colors, red) 0%, darken(map-get($colors, red), 10) 100%);
          }

          tr.status-3 td:last-child:before {
               background: linear-gradient(to left, map-get($colors, green) 0%, darken(map-get($colors, green), 10) 100%);
          }

          tr.status-2 td:last-child:before {
               background: linear-gradient(to left, map-get($colors, blue) 0%, darken(map-get($colors, blue), 10) 100%);
          }

          tr.status-1 td:last-child:before {
               background: linear-gradient(to left, map-get($colors, red) 0%, darken(map-get($colors, red), 10) 100%);
          }

          tr.time-entry {

               td.subject {

                    a {
                         background: white;
                         color: rgb(27, 27, 27);

                         border: 1px solid #838383;
                         border-radius: 5px;
                         height: 100%;
                         padding: 0 15px;
                         display: inline-block;
                    }

                    //Statuses at 
                    a.status-1 {
                         background: linear-gradient(to top, map-get($colors, red) 0%, darken(map-get($colors, red), 10) 100%);
                    }
                    a.status-2 {
                         background: linear-gradient(to top, map-get($colors, blue) 0%, darken(map-get($colors, blue), 10) 100%);
                    }
                    a.status-3 {
                         background: linear-gradient(to top, map-get($colors, green) 0%, darken(map-get($colors, green), 10) 100%);

                    }
                    a.status-4 {
                         background: linear-gradient(to top, map-get($colors, red) 0%, darken(map-get($colors, red), 10) 100%);
                    }
                    a.status-5 {
                         background: linear-gradient(to top, map-get($colors, black) 0%, darken(map-get($colors, black), 10) 100%);
                    }
                    a.status-6 {
                         background: linear-gradient(to top, map-get($colors, black) 0%, darken(map-get($colors, black), 10) 100%);
                    }
               }
          }
     }

}




@mixin priority($priority, $color) {
     tr.#{$priority} {

          td {
               border: 1px solid lighten(map-get($colors, $color), 5) !important;
          }
     
          &.odd { 
               background: lighten(rgba(map-get($colors,  $color), 0.6), 3); 
          }
     
          &.even { 
               background: rgba(map-get($colors, $color), 0.6);
          }
     }
}
   

@include priority(priority-1, gray);
@include priority(priority-2, white);
@include priority(priority-3, yellow);
@include priority(priority-4, orange);
@include priority(priority-5, red);
